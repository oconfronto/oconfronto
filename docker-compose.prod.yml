version: '3.7'
services:
  mysql:
    image: mysql/mysql-server:5.7.37
    restart: always
    networks:
      - app-tier
    env_file:
      - .env
    ports:
      - 3306:3306
      - 33060:33060
    volumes:
      - ./src/init.sql:/docker-entrypoint-initdb.d/init.sql
      - mysql_data:/var/lib/mysql

  app:
    depends_on:
      - mysql
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - app-tier
    env_file:
      - .env
    volumes:
      - ./src:/var/www/html
    environment:
      - VIRTUAL_HOST=${DOMAIN}
      - VIRTUAL_ROOT="/app"
    expose:
      - "80"

  nginx-proxy:
    image: jwilder/nginx-proxy
    restart: always
    networks:
      - app-tier
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs:ro
      - ./vhost.d:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html
    environment:
      ENABLE_IPV6: "true"
    labels:
      - "com.github.nginx-proxy.nginx=true"

  docker-gen:
    image: jwilder/docker-gen
    networks:
      - app-tier
    command: -notify-sighup nginx-proxy -watch /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl
    depends_on:
      - nginx-proxy

  letsencrypt-nginx-proxy-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    depends_on:
      - nginx-proxy
    networks:
      - app-tier
    environment:
      NGINX_PROXY_CONTAINER: nginx-proxy
      NGINX_DOCKER_GEN_CONTAINER: docker-gen
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/etc/nginx/certs:rw
      - ./vhost.d:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html

volumes:
  mysql_data:

networks:
  app-tier:
    driver: bridge
